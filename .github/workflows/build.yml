# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: DEBUG 1
      run: |
        ls
    - run: npm ci
    - run: npm run build --if-present
#    - run: npm test
    - name: DEBUG 2
      run: |
        ls
    - uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: dist/
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: build-output
    - name: DEBUG 2
      run: |
        ls
#     - name: Sync files
#       uses: SamKirkland/web-deploy@1.0.0
#       with:
#         target-server: www.oldhickoryinn.com
#         remote-user: ${{ secrets.FTP_USER }}
#         remote-key: ${{ secrets.FTP_PASSWORD }}
#         source-path: ./
#         destination-path: test-deploy
    - name: Deploy to Dreamhost Server
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: www.oldhickoryinn.com
        port: 22
        protocol: ftps-legacy
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
#        local-dir: dist/
        server-dir: test-deploy/

